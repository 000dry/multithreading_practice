{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red100\green100\blue100;\red106\green62\blue62;
\red0\green0\blue192;\red42\green0\blue255;\red63\green127\blue95;\red127\green159\blue191;}
{\*\expandedcolortbl;;\csgenericrgb\c49804\c0\c33333;\csgenericrgb\c39216\c39216\c39216;\csgenericrgb\c41569\c24314\c24314;
\csgenericrgb\c0\c0\c75294;\csgenericrgb\c16471\c0\c100000;\csgenericrgb\c24706\c49804\c37255;\csgenericrgb\c49804\c62353\c74902;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10760\viewh8340\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Multithreading\
\

\b0 \ul Multithreading in Java\ulnone \
\

\b Method 1:\
\

\b0 1. Create Runner class that extends Threads class, with its own run() method.\
2. Create App class and instantiate runner object(s) within.\
3. Call .start() on each runner.\
4. Each .start() runs the contents of runner in it\'92s own thread, allowing the processes to run simultaneously.\
\
\pard\pardeftab720\partightenfactor0

\f1\fs22 \cf2 class\cf0  Runner \cf2 extends\cf0  Thread\{\
	\cf3 @Override\cf0 \
	\cf2 public\cf0  \cf2 void\cf0  run() \{\
	  \cf2 for\cf0 (\cf2 int\cf0  \cf4 i\cf0  = 0; \cf4 i\cf0  < 10; \cf4 i\cf0 ++) \{\
		  System.\cf5 out\cf0 .println(\cf6 "Hello "\cf0  + \cf4 i\cf0 );\
		  \cf2 try\cf0  \{\
			Thread.sleep(100);\
		\} \cf2 catch\cf0  (InterruptedException \cf4 e\cf0 ) \{\
			\cf7 // \cf8 TODO\cf7  Auto-generated catch block\cf0 \
			\cf4 e\cf0 .printStackTrace();\
		\}\
	  \}\
	\}\
	\
\}\
\
\cf2 public\cf0  \cf2 class\cf0  App \{\
\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf4 args\cf0 ) \{\
	  Runner \cf4 runner1\cf0  = \cf2 new\cf0  Runner();\
	  \cf4 runner1\cf0 .start();\
	  \
	  Runner \cf4 runner2\cf0  = \cf2 new\cf0  Runner();\
	  \cf4 runner2\cf0 .start();\
	\}\
\
\}
\f0\fs24 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 \
Method 2:\
\

\b0 1. Similar method, except Runner implements Runnable instead of extending Threads.\
2. In App class, instantiate new Threads with a new Runner passed in as the argument.\
\
\pard\pardeftab720\partightenfactor0

\f1\fs22 \cf2 class\cf0  Runner \cf2 implements\cf0  Runnable\{\
\
	\cf3 @Override\cf0 \
	\cf2 public\cf0  \cf2 void\cf0  run() \{\
		\cf2 for\cf0 (\cf2 int\cf0  \cf4 i\cf0  = 0; \cf4 i\cf0  < 10; \cf4 i\cf0 ++) \{\
			  System.\cf5 out\cf0 .println(\cf6 "Hello "\cf0  + \cf4 i\cf0 );\
			  \cf2 try\cf0  \{\
				Thread.sleep(100);\
			\} \cf2 catch\cf0  (InterruptedException \cf4 e\cf0 ) \{\
				\cf4 e\cf0 .printStackTrace();\
			\}\
		\}\
	\}\
\}\
\
\cf2 public\cf0  \cf2 class\cf0  App \{\
	\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf4 args\cf0 )\{\
		Thread \cf4 t1\cf0  = \cf2 new\cf0  Thread(\cf2 new\cf0  Runner());\
		Thread \cf4 t2\cf0  = \cf2 new\cf0  Thread(\cf2 new\cf0  Runner());\
		\
		\cf4 t1\cf0 .start();\
		\cf4 t2\cf0 .start();\
	\}\
\}
\f0\fs24 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \

\b The above methods require the creation of a dedicated Runner class, however they can also be implemented using an anonymous class on the fly:\
\

\b0 1. In the main App class, you can instantiate a new Thread and in the brackets instantiate a new Runnable and its method.
\b \
\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs22 \cf2 public\cf0  \cf2 class\cf0  App \{\
\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf4 args\cf0 ) \{\
		Thread \cf4 t1\cf0  = \cf2 new\cf0  Thread(\cf2 new\cf0  Runnable() \{\
			\cf3 @Override\cf0 \
			\cf2 public\cf0  \cf2 void\cf0  run() \{\
				\cf2 for\cf0 (\cf2 int\cf0  \cf4 i\cf0  = 0; \cf4 i\cf0  < 10; \cf4 i\cf0 ++) \{\
					  System.\cf5 out\cf0 .println(\cf6 "Hello "\cf0  + \cf4 i\cf0 );\
					  \cf2 try\cf0  \{\
						Thread.sleep(100);\
					\} \cf2 catch\cf0  (InterruptedException \cf4 e\cf0 ) \{\
						\cf4 e\cf0 .printStackTrace();\
					\}\
				\}\
			\}\
		\});\
		\cf4 t1\cf0 .start();\
	\}\
\
\}\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 What are the two basic methods of creating a thread in Java?\
\

\b0 1. Extend the thread class.\
2. Implement Runnable and pass it to the constructor of the Thread class.}